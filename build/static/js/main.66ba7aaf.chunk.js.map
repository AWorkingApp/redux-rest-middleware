{"version":3,"sources":["lib/interceptors.js","lib/constants.js","lib/request.js","lib/actions.js","lib/resources.js","lib/reducers.js","lib/middleware.js","index.js"],"names":["_preInterceptors","_postInterceptors","configPreInterceptors","arguments","length","undefined","forEach","preInterceptor","_validInterceptor","Error","preInter","push","addPreInterceptor","configPostInterceptors","postInterceptor","postInter","addPostInterceptor","interceptor","GET_RESOURCES","GET_RESOURCE","POST_RESOURCE","PUT_RESOURCE","DELETE_RESOURCE","CLEAR_RESOURCE_DETAIL","CLEAR_RESOURCE_DATA","REQUEST_SUCCESS","REQUEST_ERROR","RUNTIME_ERROR","CLEAR_ALL","METHODS","GET","POST","PUT","DELETE","_get","_x","_get2","apply","this","_callee6","url","options","resource","_args6","regenerator_default","a","wrap","_context6","prev","next","request","Object","objectSpread","method","abrupt","sent","stop","_post","_x2","_post2","_callee7","_args7","_context7","_put","_x3","_put2","_callee8","_args8","_context8","_delete","_callee9","_args9","_context9","_x5","_x6","_request","_callee11","preInterceptors","postInterceptors","_options","_context11","handleInterceptors","axios","then","_ref","asyncToGenerator","mark","_callee10","response","_response","_context10","data","status","_x10","catch","e","_callee12","interceptors","_data","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_iterator2","_step2","inter","__data","_args12","_context12","Symbol","iterator","done","value","_processResource","t0","return","finish","resources","Array","isArray","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","interRes","methods","indexOf","exclude","err","getResources","route","crudAction","Consts","requestError","id","error","type","crudErrorAction","runtimeError","runtimeErrorAction","crudSuccessAction","payload","_resourceClients","_resourceActions","_resourceActionsMap","_initialReducers","configResources","resourceUrl","getAll","_getAll","_callee","_args","_context","concat","get","_get3","_callee2","_args2","_context2","_x7","post","_post3","_callee3","_args3","_context3","put","_put3","_callee4","_args4","_context4","_x8","delete","_delete4","_callee5","_args5","_context5","_x9","RestClient","_resourceName","toUpperCase","substr","newResourceMap","_ref2","BasicActions","_ref3","_ref4","entity","_ref5","_ref5$id","_ref6","detail","loading","total","addResource","getInitialReducerState","getResourceActions","dispatch","funcs","resultActions","config","state","fromJS","action","set","setIn","dataIdx","resultState","getIn","findIndex","d","updateIn","unshift","deleteIn","requestSuccessReducer","resourceMiddleware","store","restClient","onError","_onError","result","createResourceMiddleware","message","ResourcesActions","__webpack_require__","__webpack_exports__","lib_resources","reducers_resources"],"mappings":"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","file":"static/js/main.66ba7aaf.chunk.js","sourcesContent":["\n/*\n* interceptor can be either a function or a object,\n* if its a function its in the format of \n*   (options = {}, resource) => {}, // this return either a new options or false to ignore this interceptor\n*\n* if interceptor is an object, it is as the following\n* {\n*    interceptor: (options = {}, resource) => {},\n*    exclude: false, // include or excludes all the filtered resource,\n*    resources: [{\n*        resource: '',\n*        methods: [], // if not default, by defaul it checks all methods\n*    }] \n* }\n*/\nconst _preInterceptors = [];\nconst _postInterceptors = [];\n\nexport const configPreInterceptors = (preInterceptors = []) => {\n    preInterceptors.forEach((preInterceptor) => {\n        if(!_validInterceptor(preInterceptor)){\n            throw new Error('preInteceptor must be a function or a object');\n        }\n\n        addPreInterceptor(preInterceptor);\n    });\n}\n\nfunction addPreInterceptor(preInter = (options = {}, resource) => { }) {\n    _preInterceptors.push(preInter);\n}\n\nexport const configPostInterceptors = (postInterceptors = []) => {\n    postInterceptors.forEach((postInterceptor) => {\n        if(!_validInterceptor(postInterceptor)){\n            throw new Error('postInteceptor must be a function');\n        }\n\n        addPostInterceptor(postInterceptor);\n    });\n}\n\nfunction addPostInterceptor(postInter = (result = {}, resource) => { }){\n    _postInterceptors.push(postInter);\n}\n\nconst _validInterceptor = (interceptor) => {\n    if (typeof interceptor !== 'function' &&\n        (interceptor === null || typeof interceptor !== 'object')\n    ) {\n        return false;\n    }\n\n    return true;\n}\n\nexport function getPreInterceptors() {\n    return _preInterceptors;\n} \n\nexport function getPostInterceptors() {\n    return _postInterceptors;\n}\n","export const GET_RESOURCES = 'REDUX_REST_RESOURCE_GET_RESOURCES';\n\nexport const GET_RESOURCE = 'REDUX_REST_RESOURCE_GET_RESOURCE';\n\nexport const POST_RESOURCE = 'REDUX_REST_RESOURCE_POST_RESOURCE';\n\nexport const PUT_RESOURCE = 'REDUX_REST_RESOURCE_PUT_RESOURCE';\n\nexport const DELETE_RESOURCE = 'REDUX_REST_RESOURCE_DELETE_RESOURCE';\n\nexport const CLEAR_RESOURCE_DETAIL = 'REDUX_REST_RESOURCE_CLEAR_RESOURCE_DETAIL';\nexport const CLEAR_RESOURCE_DATA = 'REDUX_REST_RESOURCE_CLEAR_RESOURCE_DATA';\n\nexport const CUSTOM_ACTION_RESOURCE = 'REDUX_REST_RESOURCE_CUSTOM_ACTION_RESOURCE';\nexport const CUSTOM_ACTION_RESOURCES = 'REDUX_REST_RESOURCE_CUSTOM_ACTION_RESOURCES';\n\nexport const REQUEST_SUCCESS = '@@/REDUX_REST_RESOURCE/REQUEST_SUCCESS';\nexport const REQUEST_ERROR = '@@/REDUX_REST_RESOURCE/REQUEST_ERROR';\n\nexport const RUNTIME_ERROR = '@@/REDUX_REST_RESOURCE/RUNTIME_ERROR';\n\nexport const CLEAR_ALL = '@@/REDUX_REST_RESOURCE/CLEAR_ALL';\n\nexport const METHODS = {\n    GET: 'get',\n    POST: 'post',\n    PUT: 'put',\n    DELETE: 'delete'\n};\n","\nimport axios from 'axios';\n\nimport * as Interceptors from './interceptors';\n\nimport { METHODS } from './constants';\n\nexport async function _get(url, options = {}, resource) {\n    return await request({\n        method: METHODS.GET,\n        url: url,\n        ...options\n    }, resource);\n}\n\nexport async function _post(url, options = {}, resource) {\n    return await request({\n        method: METHODS.POST,\n        url: url,\n        ...options\n    }, resource);\n}\n\nexport async function _put(url, options = {}, resource) {\n    return await request({\n        method: METHODS.PUT,\n        url: url,\n        ...options\n    }, resource);\n}\n\nexport async function _delete(url, options = {}, resource) {\n    return await request({\n        method: METHODS.DELETE,\n        url: url,\n        ...options\n    }, resource);\n}\n\nexport async function request(options, resource) {\n    const preInterceptors = Interceptors.getPreInterceptors();\n    const postInterceptors = Interceptors.getPostInterceptors();\n    const method = options.method;\n    let _options = await handleInterceptors(preInterceptors, options, resource, method);\n    return axios(_options).then(async (response) => {\n        let _response = await handleInterceptors(postInterceptors, response, resource, method);\n        return { data: _response.data, status: _response.status };\n    }).catch ((e) => {\n        throw e;\n    });\n}\n\nexport default function RestClient(resource, resourceUrl) {\n    return {\n        getAll: async (options = {}, route = '') => {\n            let url = `${resourceUrl}${route}`;\n            return await _get(url, options, resource);\n        },\n\n        get: async (id, options = {}, route = '') => {\n            let url = `${resourceUrl}${route}/${id}`;\n            return await _get(url, options, resource);\n        },\n\n        post: async (options = {}, route = '') => {\n            let url = `${resourceUrl}${route}`;\n            return await _post(url, options, resource);\n        },\n\n        put: async (id, options = {}, route = '') => {\n            let url = `${resourceUrl}${route}/${id}`;\n            return await _put(url, options, resource);\n        },\n\n        delete: async (id, options = {}, route = '') => {\n            let url = `${resourceUrl}${route}/${id}`;\n            return await _delete(url, options, resource);\n        }\n    }\n}\n\nasync function handleInterceptors(interceptors = [], data = {}, resource, method) {\n    let _data = { ...data };\n    for (let inter of interceptors) {\n        let __data;\n        if (typeof inter === 'function') {\n            __data = await inter(_data, resource);\n        } else if (inter && inter !== null && typeof inter === 'object') {\n            if (typeof inter.interceptor === 'function') {\n                if (_processResource(inter, resource, method)) {\n                    __data = await inter.interceptor(_data, resource);\n                }\n            }\n        }\n        if (__data) {\n            _data = __data;\n        }\n    }\n\n    return _data;\n}\n\nconst _processResource = (interceptor, resource, method) => {\n    // resources filter is defined\n    if (interceptor.resources && Array.isArray(interceptor.resources)) {\n        // check resource filter, if there is a resource match\n        for (let interRes of interceptor.resources) {\n            // find the matching resource\n            if (interRes.resource === resource) {\n                if (!interRes.methods \n                    || (Array.isArray(interRes.methods) && interRes.methods.indexOf(method)) > -1) {\n                    // this is the match resource and method, check if we want to exclude or include this resource\n                    if (interceptor.exclude) {\n                        return false;\n                    }\n\n                    return true;\n                }\n            }\n        }\n\n        // we dont find this resource, if not exclude, we dont process this resource/method\n        if (!interceptor.exclude) {\n            return false;\n        }\n    }\n\n    return true; // process this resources if the filter is not defined\n}\n","import * as Consts from './constants';\n\n/**\n * Used when logging out to clear all loaded resources\n */\nexport function clearAll() {\n    return {\n        type: Consts.CLEAR_ALL\n    }\n}\n\n/**\n * Get\n */\nexport function getResource(resource, id, options = {}, route = ''){\n    return crudAction(Consts.GET_RESOURCE, resource, id, options, route);\n}\n\nexport function getResourceSuccess(resource, id, payload) {\n    return crudSuccessAction(Consts.METHODS.GET, resource, id, payload);\n}\n\n/**\n * Get All\n */\nexport function getResources(resource, options = {}, route = ''){\n    return crudAction(Consts.GET_RESOURCES, resource, undefined, options, route);\n}\n\nexport function getResourcesSuccess(resource, payload) {\n    return crudSuccessAction(Consts.METHODS.GET, resource, undefined, payload);\n}\n\n/**\n * Post\n */\nexport function postResource(resource, entity = {}, options = {}, route = '') {\n    options.data = entity;\n    return crudAction(Consts.POST_RESOURCE, resource, undefined, options, route);\n}\n\nexport function postResourceSuccess(resource, payload) {\n    return crudSuccessAction(Consts.METHODS.POST, resource, undefined, payload);\n}\n\n/**\n * Put\n */\nexport function putResource(resource, id, entity = {}, options = {}, route = '') {\n    options.data = entity;\n    return crudAction(Consts.PUT_RESOURCE, resource, id, options, route);\n}\n\nexport function putResourceSuccess(resource, id, payload) {\n    return crudSuccessAction(Consts.METHODS.PUT, resource, id, payload);\n}\n\n/**\n * Delete\n */\n\nexport function deleteResource(resource, id, options = {}, route = '') {\n    return crudAction(Consts.DELETE_RESOURCE, resource, id, options, route);\n}\n\nexport function deleteResourceSuccess(resource, id, payload) {\n    return crudSuccessAction(Consts.METHODS.DELETE, resource, id, payload);\n}\n\n/**\n * Clear the detail of the resource\n */\nexport function clearResourceDetail(resource){\n    return { \n        type: Consts.CLEAR_RESOURCE_DETAIL,\n        resource\n    }\n}\n\nexport function clearResourceData(resource){\n    return { \n        type: Consts.CLEAR_RESOURCE_DATA,\n        resource\n    }\n}\n\n/**\n * Request error\n */\nexport function requestError(resource, id, error) {\n    return crudErrorAction(resource, id, error);\n}\n\n/**\n * Runtime error\n */\nexport function runtimeError(resource, id, error) {\n    return runtimeErrorAction(resource, id, error);\n}\n\n/**\n * Internals\n */\nfunction crudAction(type, resource, id, options, route) {\n    if (!id) {\n        return {\n            type,\n            resource,\n            options,\n            route,\n        }\n    }\n    return {\n        type,\n        resource,\n        id,\n        options,\n        route,\n    }\n}\n\nfunction crudSuccessAction(method, resource, id, payload) {\n    if (!id) {\n        return {\n            type: Consts.REQUEST_SUCCESS,\n            method,\n            resource,\n            payload,\n        }\n    }\n    return {\n        type: Consts.REQUEST_SUCCESS,\n        method,\n        resource,\n        id,\n        payload,\n    }\n}\n\nfunction crudErrorAction(resource, id, error) {\n    if (!id) {\n        return {\n            type: Consts.REQUEST_ERROR,\n            resource,\n            error,\n        }\n    }\n    return {\n        type: Consts.REQUEST_ERROR,\n        resource,\n        id,\n        error,\n    }\n}\n\nfunction runtimeErrorAction(resource, id, error) {\n    if (!id) {\n        return {\n            type: Consts.RUNTIME_ERROR,\n            resource,\n            error,\n        }\n    }\n    return {\n        type: Consts.RUNTIME_ERROR,\n        resource,\n        id,\n        error,\n    }\n}\n\n// This is for custom http request\nexport function requestReources(request, resource, options = {}, route = '') {\n    return {\n    }\n}\n","\nimport RestClient from './request';\nimport * as BasicActions from './actions';\n\nconst _resourceClients = {};\nconst _resourceActions = {};\nconst _resourceActionsMap = {};\nconst _initialReducers = {};\n\nexport const configResources = (resources) => {\n    resources.forEach((resource) => {\n        if (!resource.url || !resource.resource) {\n            throw new Error('Resource must have both url and resource specified');\n        }\n\n        // TODO check if resource already exist\n        addResource(resource);\n    });\n}\n\nfunction addResource({ resource, url }) {\n    _resourceClients[resource] = RestClient(resource, url);\n\n    const _resourceName = resource[0].toUpperCase() + resource.substr(1);\n    const newResourceMap = {};\n\n    _resourceActions[`get${_resourceName}`] = ({ id, options, route } = {}) => {\n        if(id){\n            return BasicActions.getResource(resource, id, options, route);\n        }\n        return BasicActions.getResources(resource, options, route);\n    }; \n    _resourceActions[`getAll${_resourceName}`] = ({ options, route }) => BasicActions.getResources(resource, options, route); \n\n    _resourceActions[`post${_resourceName}`] = ({ entity, options, route }) => BasicActions.postResource(resource, entity, options, route); \n    _resourceActions[`put${_resourceName}`] = ({ id = '', entity, options, route }) => BasicActions.putResource(resource, id, entity, options, route); \n    _resourceActions[`delete${_resourceName}`] = ({ id, options, route }) => BasicActions.deleteResource(resource, id, options, route); \n\n    _resourceActions[`clear${_resourceName}Detail`] = () => BasicActions.clearResourceDetail(resource); \n    _resourceActions[`clear${_resourceName}Data`] = () => BasicActions.clearResourceData(resource); \n\n    // create a new map element\n    newResourceMap[`get${_resourceName}`] =  _resourceActions[`get${_resourceName}`];\n    newResourceMap[`getAll${_resourceName}`] =  _resourceActions[`getAll${_resourceName}`];\n    newResourceMap[`post${_resourceName}`] = _resourceActions[`post${_resourceName}`];\n    newResourceMap[`put${_resourceName}`] = _resourceActions[`put${_resourceName}`];\n    newResourceMap[`delete${_resourceName}`] =  _resourceActions[`delete${_resourceName}`];\n    newResourceMap[`clear${_resourceName}Detail`] = _resourceActions[`clear${_resourceName}Detail`];\n    newResourceMap[`clear${_resourceName}Data`] = _resourceActions[`clear${_resourceName}Data`];\n\n    _resourceActionsMap[resource] = newResourceMap;\n\n    _initialReducers[resource] = { \n        data: [],\n        detail: {},\n        loading: false,\n        total: 0,\n    };\n}\n\nexport default _resourceActions;\nexport function getInitialReducerState(){\n    return _initialReducers;\n}\n\nexport function getResourceClient(resource) {\n    return _resourceClients[resource];\n}\n\nexport function getResourceActions(resource, dispatch){\n    const funcs = _resourceActionsMap[resource];\n    const _resourceName = resource[0].toUpperCase() + resource.substr(1);\n\n    const resultActions = {};\n    resultActions[`get${_resourceName}`] = (config) => dispatch(funcs[`get${_resourceName}`](config));\n    resultActions[`getAll${_resourceName}`] = (config) => dispatch(funcs[`getAll${_resourceName}`](config));\n    resultActions[`post${_resourceName}`] = (config) => dispatch(funcs[`post${_resourceName}`](config));\n    resultActions[`put${_resourceName}`] = (config) => dispatch(funcs[`put${_resourceName}`](config));\n    resultActions[`delete${_resourceName}`] = (config) => dispatch(funcs[`delete${_resourceName}`](config));\n    resultActions[`clear${_resourceName}Detail`] = () => dispatch(funcs[`clear${_resourceName}Detail`]());\n    resultActions[`clear${_resourceName}Data`] = () => dispatch(funcs[`clear${_resourceName}Data`]());\n\n\n    return resultActions;\n}\n","import { fromJS } from 'immutable';\n\nimport { getInitialReducerState } from './resources';\n\nimport * as Consts from './constants';\n\n// TODO get rid of immutablejs as dependency\nexport default function resources(state = fromJS({ loading: false, ...getInitialReducerState() }), action = {}) {\n    switch (action.type) {\n        case Consts.GET_RESOURCES:\n            return state.set('loading', true)\n                .setIn([action.resource, 'loading'], true);\n\n        case Consts.POST_RESOURCE:\n            return state.set('loading', true)\n                .setIn([action.resource, 'loading'], true);\n\n        case Consts.PUT_RESOURCE:\n        case Consts.GET_RESOURCE:\n        case Consts.DELETE_RESOURCE:\n            return state.set('loading', true)\n                .setIn([action.resource, 'loading'], true)\n                .setIn([action.resource, 'detail'], fromJS({}));\n\n        case Consts.REQUEST_SUCCESS:\n            return requestSuccessReducer(state, action);\n        \n        case Consts.REQUEST_ERROR:\n        case Consts.RUNTIME_ERROR:\n            return state.set('loading', false).setIn([action.resource, 'loading'], false);\n\n        case Consts.CLEAR_RESOURCE_DATA:\n            return state\n                .setIn([action.resource, 'data'], fromJS([]));\n\n        case Consts.CLEAR_RESOURCE_DETAIL:\n            return state\n                .setIn([action.resource, 'detail'], fromJS({}));\n\n        // return to initial state\n        case Consts.CLEAR_ALL:\n            return fromJS({ loading: false, ...getInitialReducerState() })\n        \n        default:\n            break;\n    }\n    return state;\n}\n\nfunction requestSuccessReducer(state, action) {\n    let dataIdx;\n    let resultState = state.set('loading', false)\n        .setIn([action.resource, 'loading'], false);\n\n    if (action.payload.id) {\n        dataIdx = resultState.getIn([action.resource, 'data']).findIndex((d) => `${d.get('id')}` === `${action.payload.id}`);\n    } else if (action.id) {\n        dataIdx = resultState.getIn([action.resource, 'data']).findIndex((d) => d.get('id') === action.id);\n    }\n\n    switch(action.method){\n        case Consts.METHODS.GET:\n            if (action.id) {\n                return resultState.setIn([action.resource, 'detail'], fromJS(action.payload));\n            }\n            return resultState.setIn([action.resource, 'data'], fromJS(action.payload));\n\n        case Consts.METHODS.POST:\n            return resultState.updateIn([action.resource, 'data'], (data) => data.push(fromJS(action.payload)));\n\n        case Consts.METHODS.PUT:\n            // if current detail is loaded, update detail as well\n            if (resultState.getIn([action.resource, 'detail', 'id']) === action.payload.id\n                || resultState.getIn([action.resource, 'detail', 'id']) === undefined) {\n                resultState = resultState.setIn([action.resource, 'detail'], fromJS(action.payload));\n            }\n\n            if (dataIdx > -1) {\n                return resultState\n                    .setIn([action.resource, 'data', dataIdx], fromJS(action.payload));\n            } else {\n                return resultState.updateIn([action.resource, 'data'], (data) => data.unshift(fromJS(action.payload)));\n            }\n\n        case Consts.METHODS.DELETE:\n            if (dataIdx > -1) {\n                return resultState.deleteIn([action.resource, 'data', dataIdx])\n                    .deleteIn([action.resource, 'detail']);\n            }\n            break;\n\n        default:\n            break;\n    }\n\n    return resultState;\n}","\nimport * as ResourcesActions from './actions';\n\nimport { getResourceClient, configResources } from './resources';\nimport { configPreInterceptors, configPostInterceptors } from './interceptors';\n\nimport * as Consts from './constants';\n\nconst resourceMiddleware = store => next => action => {\n    const restClient = getResourceClient(action.resource);\n    const onError  = _onError(next, action);\n    // apply all middlewares\n    next(action);\n    switch (action.type) {\n        case Consts.GET_RESOURCE:\n            restClient\n                .get(action.id, action.options, action.route)\n                .then((result) => next(ResourcesActions.getResourceSuccess(action.resource, action.id, result.data)), onError);\n            break;\n\n        case Consts.GET_RESOURCES:\n            restClient\n                .getAll(action.options, action.route)\n                .then((result) => next(ResourcesActions.getResourcesSuccess(action.resource, result.data)), onError);\n            break;\n\n        case Consts.POST_RESOURCE:\n            restClient\n                .post(action.options, action.route)\n                .then((result) => next(ResourcesActions.postResourceSuccess(action.resource, result.data)), onError);\n            break;\n\n        case Consts.PUT_RESOURCE:\n            restClient\n                .put(action.id, action.options, action.route)\n                .then((result) => next(ResourcesActions.putResourceSuccess(action.resource, action.id, result.data)), onError);\n            break;\n        \n        case Consts.DELETE_RESOURCE:\n            restClient\n                .delete(action.id, action.options, action.route)\n                .then((result) => next(ResourcesActions.deleteResourceSuccess(action.resource, action.id, result.data)), onError);\n            break;\n        default:\n            break;\n    }\n};\n\nexport default function createResourceMiddleware(resources = [], preInterceptors = [], postInterceptors = []) {\n    if (!Array.isArray(resources)) {\n        throw new Error('Resources should be an array of resources');\n    }\n\n    if (resources.length === 0) {\n        throw new Error('At least one resource is required');\n    }\n\n    configResources(resources);\n\n    if (!Array.isArray(preInterceptors)) {\n        throw new Error('preInterceptors should be an array of functions');\n    }\n\n    configPreInterceptors(preInterceptors);\n\n    if (!Array.isArray(postInterceptors)) {\n        throw new Error('postInterceptors should be an array of functions');\n    }\n\n    configPostInterceptors(postInterceptors);\n\n    return resourceMiddleware;\n}\n\nconst _onError = (next, action) => error => {\n    let { response, message } = error;\n\n    if (response && message) {\n        return next(ResourcesActions.requestError(action.resource, action.id, { status: response.status, message, response })); \n    }\n\n    // general error handling\n    return next(ResourcesActions.runtimeError(action.resource, action.id, error)); \n}\n","export { default as ResourcesActions } from './lib/resources';\nexport { getResourceActions as getResourceActions } from './lib/resources'; // eslint-disable-lin\nexport { default as ResourcesReducer } from './lib/reducers';\n\n// create the middleware\nexport { default as createResourceMiddleware } from './lib/middleware';\n\nexport { METHODS, REQUEST_SUCCESS, REQUEST_ERROR, RUNTIME_ERROR } from './lib/constants';\n"],"sourceRoot":""}